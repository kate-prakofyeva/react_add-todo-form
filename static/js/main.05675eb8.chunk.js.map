{"version":3,"sources":["api/usersFromServer.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","utils/getUser.ts","utils/getTodosWithUser.ts","api/todosFromServer.ts","utils/getId.ts","App.tsx","index.tsx"],"names":["id","name","username","email","UserInfo","_ref","user","_jsx","className","href","concat","children","TodoInfo","todo","title","completed","_jsxs","classNames","TodoList","todos","map","getUser","userId","usersFromServer","find","todosWithUser","getId","Math","max","App","setTodos","useState","setTitle","setUserId","titleError","setTitleError","userError","setUserError","action","method","onSubmit","event","preventDefault","addTodo","newTodo","prev","htmlFor","type","value","placeholder","onChange","newTitle","target","trimStart","selectesUser","Number","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.05675eb8.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo = ({ user } : Props) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo = ({ todo } : Props) => {\n  const {\n    title, user, id, completed,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n      { user && <UserInfo user={user} /> }\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList = ({ todos }: Props) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import { usersFromServer } from '../api';\n\nexport const getUser = (userId: number) => {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser;\n};\n","import { todosFromServer } from '../api';\nimport { Todo } from '../types';\nimport { getUser } from './getUser';\n\nexport const todosWithUser: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { Todo } from '../types';\n\nexport const getId = (todos:Todo[]) => {\n  return Math.max(...todos.map(todo => todo.id)) + 1;\n};\n","import { useState } from 'react';\nimport './App.scss';\n\nimport { usersFromServer } from './api';\nimport { TodoList } from './components/TodoList';\nimport { getUser, todosWithUser, getId } from './utils';\nimport { Todo } from './types';\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(todosWithUser);\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [titleError, setTitleError] = useState<string>('');\n  const [userError, setUserError] = useState<string>('');\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newTitle = (event.target.value).trimStart();\n\n    setTitle(newTitle);\n    setTitleError('');\n  };\n\n  const handleUserSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const selectesUser = Number(event.target.value);\n\n    setUserId(selectesUser);\n    setUserError('');\n  };\n\n  const resetForm = () => {\n    setTitle('');\n    setUserId(0);\n    setTitleError('');\n    setUserError('');\n  };\n\n  const addTodo = () => {\n    const newTodo: Todo = {\n      id: getId(todos),\n      title,\n      userId,\n      completed: false,\n      user: getUser(userId),\n    };\n\n    setTodos(prev => [...prev, newTodo]);\n  };\n\n  const handleSubmit = (event:React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!title) {\n      setTitleError('Please enter a title');\n    }\n\n    if (!userId) {\n      setUserError('Please choose a user');\n    }\n\n    const isValid = title && userId;\n\n    if (!isValid) {\n      return;\n    }\n\n    addTodo();\n    resetForm();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            id=\"title\"\n            value={title}\n            placeholder=\"Enter a title\"\n            onChange={handleTitle}\n          />\n          {titleError && <span className=\"error\">{titleError}</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">User: </label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"userSelect\"\n            value={userId}\n            onChange={handleUserSelect}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(({ id, name }) => (\n              <option key={id} value={id}>\n                {name}\n              </option>\n            ))}\n          </select>\n          {userError && <span className=\"error\">{userError}</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}